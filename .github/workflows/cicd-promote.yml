name: tag to issue

on:
  issue_comment:
    types: 
      - created

jobs:
  promote_pipeline:
    if: ${{ !github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - name: Check if more than one promotion pipeline exists
        run: |
          issues=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{github.token}}" \
          https://api.github.com/repos/${{github.repository}}/issues?labels=promotion-pipeline&state=open)
          issues_numbers=$(echo ${issues} | jq '.[].number')
          length_issues=$(wc -w <<< "$issues_numbers")
          if [[ "$length_issues" == "0" ]];
          then
            echo "Comment from another issue not related to promotion pipeline"
            exit 0;
          elif [[ "$length_issues" == "1" ]] && [[ "$issues_numbers" == "${{ github.event.issue.number }}" ]];
          then
            echo "Ready to promote artifacts"
          else
            echo "Two or more promotion pipelines are open. Only one promotion pipelines should exists"
            for i in $issues_numbers;
            do
              echo "https://github.com/${{github.repository}}/issues/$i"
            done
            exit 1;
          fi
      - name: Check comment from assignees
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          author=$(echo "$GITHUB_CONTEXT" | jq '.event.comment.user.login')
          echo $author
          assignees=$(echo "$GITHUB_CONTEXT" | jq '.event.issue.assignees[].login')
          echo $assignees
          comment=$(echo "$GITHUB_CONTEXT" | jq '.event.comment.body')
          echo $comment
          # If comment has promote and comes from any of the assignees 
          if [[ *"$author"* != "$assignees" ]] && [[ *"promote"* != "$comment" ]];
          then
            echo "Not authorized"
            exit 1;
          fi
          echo "Pipeline ready to promote"
          # Parse title to get tag to promote
          issue_title=$(echo "$GITHUB_CONTEXT" | jq --raw-output '.event.issue.title')
          title_array=($issue_title)
          echo "TAG: ${title_array[3]}"
          # Parse body to get next environment
          issue_body=$(echo "$GITHUB_CONTEXT" | jq --raw-output '.event.issue.body')
          body_array=($issue_body)
          # Staging status in index 16
          echo "Staging value: ${body_array[16]}"
          # Demo status in index 19
          echo "Demo value: ${body_array[19]}"
          # Sandbox status on index 22
          echo "Sandbox value: ${body_array[22]}"
          # Production status on index 25
          echo "Production value: ${body_array[25]}"
