name: Heroku Application Deployment

on:
  workflow_call:    
    inputs:
      herokuApplication:
        description: "Heroku application name"
        required: true
        type: string
      checkoutBranch:
        description: "Which branch are we deploying from"
        required: true
        type: string
      
jobs:
  deploy_heroku_application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.checkoutBranch }}
      - name: Get source blob link
        id: source_blob_link
        run: |
          link=$(./scripts/github-blob-link.sh ${{github.token}} ${{github.repository}} ${{ inputs.checkoutBranch }})
          echo "::add-mask::$link"
          echo ::set-output name=blob_link::$link
      - name: Trigger Heroku build
        id: trigger_build_on_heroku_app
        run: |
          heroku_build=$("./scripts/heroku-deploy.sh" ${{secrets.HEROKU_API_TOKEN}} ${{ inputs.herokuApplication }} ${{ steps.source_blob_link.outputs.blob_link }} ${{ inputs.checkoutBranch }})
          stream_url=$(echo $heroku_build | jq -r .output_stream_url)
          echo ::set-output name=stream_url::$(echo $stream_url)
          build_id=$(echo $heroku_build | jq -r .id)
          echo ::set-output name=build_id::$(echo $build_id)
          release_id=$(echo $heroku_build | jq -r .release.id)
          echo ::set-output name=release_id::$(echo $release_id)
      - name: Wait for build on application
        id: wait_for_build
        run: |
          curl -fsSN $(echo ${{ steps.build_dashboard_staging.outputs.stream_url }})
      - name: Wait for release on application
        id: wait_for_release_dashboard
        run: |
          # heroku_release=$(curl -fsSv https://api.heroku.com/apps/${{ inputs.herokuApplication }}/releases/${{ steps.build_dashboard_staging.outputs.release_id }} -H "Accept: application/vnd.heroku+json; version=3" -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.HEROKU_API_TOKEN }}")
          # stream_url=$(echo $heroku_release | jq -r .output_stream_url)
          # curl -fsSN $(echo '$stream_url')
          echo "wait"
      - name: Notify Heroku application deployment
        id: slack_heroku_status
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: slack-webhook-tests
          slack-message: "Finish Staging"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}
      - if: failure()
        name: Notify Github Actions pipeline
        id: gh_actions_ststus
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: slack-webhook-tests
          slack-message: "Github actions workflow failed on deployment ${{ inputs.checkoutBranch }} in ${{ inputs.herokuApplication }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}